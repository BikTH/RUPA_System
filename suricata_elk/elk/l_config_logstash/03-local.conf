# input {
#   file {
#     path => "/var/log/rupa_suricata/eve.json"  # Chemin du fichier de logs Suricata monté
#     start_position => "beginning"
#     sincedb_path => "/dev/null"
#     codec => "json"
#     type => "suricata-eve"
#   }
# }

# filter {
#   if [type] == "suricata-eve" {
#     # Décomposer les champs JSON imbriqués
#     if [event_type] == "alert" {
#       mutate {
#         add_tag => ["Suricata-Alert"]
#       }
#       # Extraire les informations importantes
#       mutate {
#         rename => { "[src_ip]" => "source_ip" }
#         rename => { "[dest_ip]" => "destination_ip" }
#         rename => { "[src_port]" => "source_port" }
#         rename => { "[dest_port]" => "destination_port" }
#         rename => { "[alert][signature]" => "alert_signature" }
#         rename => { "[alert][category]" => "alert_category" }
#         rename => { "[alert][severity]" => "alert_severity" }
#       }
#     }


#   }
# }

# output {
#   if [type] == "suricata-eve" {
#     if [event_type] == "alert" {
#       elasticsearch {
#         hosts => ["http://localhost:9200"]
#         index => "suricata-alerts-%{+YYYY.MM.dd}"
#         manage_template => true
#         template => "/etc/logstash/templates/suricata_template.json"
#         template_name => "suricata_template"
#         template_overwrite => true
#       }
#     }
#   }
# }

input {
  file {
    path => "/var/log/rupa_suricata/eve.json"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    codec => "json"
    type => "suricata-eve"
  }
}

filter {
  if ![sensor] {
    mutate {
        add_field => { "sensor" => "suricata-sensor" }
      }
  }
  if [event_type] == "alert" {
    mutate {
      rename => { "src_ip" => "[network][src][ip]" }
      rename => { "dest_ip" => "[network][dest][ip]" }
      rename => { "src_port" => "[network][src][port]" }
      rename => { "dest_port" => "[network][dest][port]" }
      rename => { "proto" => "[network][protocol]" }
      rename => { "alert" => "[suricata][alert]" }
      rename => { "flow_id" => "[suricata][flow_id]" }
      rename => { "event_type" => "[event][type]" }
    }
    date {
      match => ["@timestamp", "ISO8601"]
    }
  }

  if [event_type] == "stats" {
    mutate {
      rename => { "decoder" => "[stats][decoder]" }
      rename => { "capture" => "[stats][capture]" }
      rename => { "tcp" => "[stats][tcp]" }
      rename => { "flow" => "[stats][flow]" }
    }
  }

  # Traite les événements de type 'dns'
  else if [event_type] == "dns" {
    mutate {
      add_tag => ["suricata-dns"]
      rename => {
        "[dns][query][name]" => "dns.query.name"
        "[dns][query][type]" => "dns.query.type"
        "[dns][answer][rrname]" => "dns.answer.rrname"
        "[dns][answer][rdata]" => "dns.answer.rdata"
      }
    }
  }

  # Traite les événements de type 'http'
  else if [event_type] == "http" {
    mutate {
      add_tag => ["suricata-http"]
      rename => {
        "[http][hostname]" => "http.hostname"
        "[http][url]" => "http.url"
        "[http][http_user_agent]" => "http.user_agent"
        "[http][status]" => "http.status"
        "[http][method]" => "http.method"
      }
      convert => {
        "http.status" => "integer"
      }
    }
  }

  # Traite les événements de type 'tls'
  else if [event_type] == "tls" {
    mutate {
      add_tag => ["suricata-tls"]
      rename => {
        "[tls][subject]" => "tls.subject"
        "[tls][issuerdn]" => "tls.issuerdn"
        "[tls][fingerprint]" => "tls.fingerprint"
        "[tls][ja3]" => "tls.ja3"
        "[tls][sni]" => "tls.sni"
      }
    }
  }

  # Ajoutez d'autres transformations nécessaires pour les types d'événements supplémentaires
}

output {
  elasticsearch {
    hosts => ["http://localhost:9200"]
    index => "suricata-%{+YYYY.MM.dd}"
    ilm_enabled => false
  }

  # # Utilisé pour vérifier la sortie pendant le débogage
  # stdout {
  #   codec => rubydebug
  # }
}

# filter {
#   if [type] == "suricata-eve" {
#     # Parse les logs JSON et gère différents types d'événements
#     mutate {
#       add_field => { "[@metadata][timestamp]" => "%{timestamp}" }
#     }
#     date {
#       match => [ "[@metadata][timestamp]", "ISO8601" ]
#       remove_field => [ "timestamp" ]
#     }

#     # Traite les événements de type 'alert'
#     if [event_type] == "alert" {
#       mutate {
#         add_tag => ["suricata-alert"]
#       }
#       # Renomme les champs pour plus de clarté
#       mutate {
#         rename => {
#           "[src_ip]" => "source.ip"
#           "[src_port]" => "source.port"
#           "[dest_ip]" => "destination.ip"
#           "[dest_port]" => "destination.port"
#           "[alert][signature]" => "alert.signature"
#           "[alert][category]" => "alert.category"
#           "[alert][severity]" => "alert.severity"
#         }
#       }
#       # Convertit les types de données
#       mutate {
#         convert => {
#           "source.port" => "integer"
#           "destination.port" => "integer"
#           "alert.severity" => "integer"
#         }
#       }
#     }

#     # Traite les événements de type 'dns'
#     else if [event_type] == "dns" {
#       mutate {
#         add_tag => ["suricata-dns"]
#       }
#       # Extrait les informations de requête DNS
#       mutate {
#         rename => {
#           "[dns][query][name]" => "dns.query.name"
#           "[dns][query][type]" => "dns.query.type"
#           "[dns][answer][rrname]" => "dns.answer.rrname"
#           "[dns][answer][rdata]" => "dns.answer.rdata"
#         }
#       }
#     }

#     # Traite les événements de type 'http'
#     else if [event_type] == "http" {
#       mutate {
#         add_tag => ["suricata-http"]
#       }
#       # Extrait les informations des requêtes et réponses HTTP
#       mutate {
#         rename => {
#           "[http][hostname]" => "http.hostname"
#           "[http][url]" => "http.url"
#           "[http][http_user_agent]" => "http.user_agent"
#           "[http][status]" => "http.status"
#           "[http][method]" => "http.method"
#         }
#       }
#       # Convertit le statut en entier
#       mutate {
#         convert => {
#           "http.status" => "integer"
#         }
#       }
#     }

#     # Traite les événements de type 'tls'
#     else if [event_type] == "tls" {
#       mutate {
#         add_tag => ["suricata-tls"]
#       }
#       mutate {
#         rename => {
#           "[tls][subject]" => "tls.subject"
#           "[tls][issuerdn]" => "tls.issuerdn"
#           "[tls][fingerprint]" => "tls.fingerprint"
#           "[tls][ja3]" => "tls.ja3"
#           "[tls][sni]" => "tls.sni"
#         }
#       }
#     }
#   }
# }

# output {
#   if [type] == "suricata-eve" {
#     elasticsearch {
#       hosts => ["http://localhost:9200"]
#       index => "suricata-%{+YYYY.MM.dd}"
#     }
#   }
# }

